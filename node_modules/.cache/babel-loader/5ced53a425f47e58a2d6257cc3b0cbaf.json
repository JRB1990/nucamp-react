{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = (campsiteId, rating, author, text) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    campsiteId,\n    rating,\n    author,\n    text\n  }\n});\nexport const fetchCampsites = () => dispatch => {\n  dispatch(campsitesLoading());\n  return fetch(baseUrl + 'campsites').then(response => response.json()).then(campsites = dispatch(addCampsites(campsites)));\n};\nexport const campsitesLoading = () => ({\n  type: ActionTypes.CAMPSITES_LOADING\n});\nexport const campsitesFailed = errMess => ({\n  type: ActionTypes.CAMPSITES_FAILED,\n  payLoad: errMess\n});\nexport const addCampsites = campsites => ({\n  type: ActionTypes.ADD_CAMPSITES,\n  payload: campsites\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errMess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errMess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromotions = () => dispatch => {\n  dispatch(promotionsLoading());\n  return fetch(baseUrl + 'promotions').then(response => response.json()).then(promotions = dispatch(addPromotions(promotions)));\n};\nexport const promotionsLoading = () => ({\n  type: ActionTypes.PROMOTIONS_LOADING\n});\nexport const promotionsFailed = errMess => ({\n  type: ActionTypes.PROMOTIONS_FAILED,\n  payLoad: errMess\n});\nexport const addPromotions = promotions => ({\n  type: ActionTypes.ADD_PROMOTIONS,\n  payload: promotions\n});","map":{"version":3,"sources":["C:/Users/krist/Desktop/Josh/Learning/Nucamp/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","campsiteId","rating","author","text","type","ADD_COMMENT","payload","fetchCampsites","dispatch","campsitesLoading","fetch","then","response","json","campsites","addCampsites","CAMPSITES_LOADING","campsitesFailed","errMess","CAMPSITES_FAILED","payLoad","ADD_CAMPSITES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromotions","promotionsLoading","promotions","addPromotions","PROMOTIONS_LOADING","promotionsFailed","PROMOTIONS_FAILED","ADD_PROMOTIONS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,IAA7B,MAAuC;AAC7DC,EAAAA,IAAI,EAAEP,WAAW,CAACQ,WAD2C;AAE7DC,EAAAA,OAAO,EAAE;AACLN,IAAAA,UADK;AAELC,IAAAA,MAFK;AAGLC,IAAAA,MAHK;AAILC,IAAAA;AAJK;AAFoD,CAAvC,CAAnB;AAUP,OAAO,MAAMI,cAAc,GAAG,MAAMC,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AAEA,SAAOC,KAAK,CAACZ,OAAO,GAAG,WAAX,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGG,SAAS,GAAGN,QAAQ,CAACO,YAAY,CAACD,SAAD,CAAb,CAFvB,CAAP;AAGH,CANM;AAQP,OAAO,MAAML,gBAAgB,GAAG,OAAO;AACnCL,EAAAA,IAAI,EAAEP,WAAW,CAACmB;AADiB,CAAP,CAAzB;AAIP,OAAO,MAAMC,eAAe,GAAGC,OAAO,KAAK;AACvCd,EAAAA,IAAI,EAAEP,WAAW,CAACsB,gBADqB;AAEvCC,EAAAA,OAAO,EAAEF;AAF8B,CAAL,CAA/B;AAKP,OAAO,MAAMH,YAAY,GAAGD,SAAS,KAAK;AACtCV,EAAAA,IAAI,EAAEP,WAAW,CAACwB,aADoB;AAEtCf,EAAAA,OAAO,EAAEQ;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAMQ,aAAa,GAAG,MAAMd,QAAQ,IAAI;AAC3C,SAAOE,KAAK,CAACZ,OAAO,GAAG,UAAX,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGY,QAAQ,IAAIf,QAAQ,CAACgB,WAAW,CAACD,QAAD,CAAZ,CAFvB,CAAP;AAGH,CAJM;AAMP,OAAO,MAAME,cAAc,GAAGP,OAAO,KAAK;AACtCd,EAAAA,IAAI,EAAEP,WAAW,CAAC6B,eADoB;AAEtCpB,EAAAA,OAAO,EAAEY;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAMM,WAAW,GAAGD,QAAQ,KAAK;AACpCnB,EAAAA,IAAI,EAAEP,WAAW,CAAC8B,YADkB;AAEpCrB,EAAAA,OAAO,EAAEiB;AAF2B,CAAL,CAA5B;AAKP,OAAO,MAAMK,eAAe,GAAG,MAAMpB,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACqB,iBAAiB,EAAlB,CAAR;AAEA,SAAOnB,KAAK,CAACZ,OAAO,GAAG,YAAX,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGmB,UAAU,GAAGtB,QAAQ,CAACuB,aAAa,CAACD,UAAD,CAAd,CAFxB,CAAP;AAGH,CANM;AAQP,OAAO,MAAMD,iBAAiB,GAAG,OAAO;AACpCzB,EAAAA,IAAI,EAAEP,WAAW,CAACmC;AADkB,CAAP,CAA1B;AAIP,OAAO,MAAMC,gBAAgB,GAAGf,OAAO,KAAK;AACxCd,EAAAA,IAAI,EAAEP,WAAW,CAACqC,iBADsB;AAExCd,EAAAA,OAAO,EAAEF;AAF+B,CAAL,CAAhC;AAKP,OAAO,MAAMa,aAAa,GAAGD,UAAU,KAAK;AACxC1B,EAAAA,IAAI,EAAEP,WAAW,CAACsC,cADsB;AAExC7B,EAAAA,OAAO,EAAEwB;AAF+B,CAAL,CAAhC","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\nexport const addComment = (campsiteId, rating, author, text) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        campsiteId,\r\n        rating,\r\n        author,\r\n        text,\r\n    }\r\n});\r\n\r\nexport const fetchCampsites = () => dispatch => {\r\n    dispatch(campsitesLoading());\r\n\r\n    return fetch(baseUrl + 'campsites')\r\n        .then(response => response.json())\r\n        .then(campsites = dispatch(addCampsites(campsites)));\r\n};\r\n\r\nexport const campsitesLoading = () => ({\r\n    type: ActionTypes.CAMPSITES_LOADING\r\n});\r\n\r\nexport const campsitesFailed = errMess => ({\r\n    type: ActionTypes.CAMPSITES_FAILED,\r\n    payLoad: errMess,\r\n});\r\n\r\nexport const addCampsites = campsites => ({\r\n    type: ActionTypes.ADD_CAMPSITES,\r\n    payload: campsites,\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)));\r\n};\r\n\r\nexport const commentsFailed = errMess => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errMess,\r\n});\r\n\r\nexport const addComments = comments => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments,\r\n});\r\n\r\nexport const fetchPromotions = () => dispatch => {\r\n    dispatch(promotionsLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => response.json())\r\n        .then(promotions = dispatch(addPromotions(promotions)));\r\n};\r\n\r\nexport const promotionsLoading = () => ({\r\n    type: ActionTypes.PROMOTIONS_LOADING\r\n});\r\n\r\nexport const promotionsFailed = errMess => ({\r\n    type: ActionTypes.PROMOTIONS_FAILED,\r\n    payLoad: errMess,\r\n});\r\n\r\nexport const addPromotions = promotions => ({\r\n    type: ActionTypes.ADD_PROMOTIONS,\r\n    payload: promotions,\r\n});"]},"metadata":{},"sourceType":"module"}